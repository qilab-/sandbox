---
- name: symlink test
  file: dest=/tmp src=/usr/hoge/tmp state=link

- name: echo ansible_distribution, ansible_distribution_major_version, ansible_distribution_version
  #debug: msg={{ ansible_distribution }}
  debug: msg="ansible_distribution = {{ ansible_distribution }}, ansible_distribution_major_version = {{ ansible_distribution_major_version }}, ansible_distribution_version = {{ ansible_distribution_version }}"
  #debug: msg="System {{ inventory_hostname }} has uuid {{ ansible_product_uuid }}"

- name: include test
  include: "{{ ansible_distribution }}_{{ ansible_distribution_major_version }}.yml"

#- name: echo
#  command: echo "hello world"

- name: stop firewalld
  command: systemctl stop firewalld

- name: disable firewalld
  command: systemctl disable firewalld

#- name: check whether /etc/sysconfig/network-scripts/ifcfg-eth0 contains DNS1
#  command: grep -Gq "^DNS1" /etc/sysconfig/network-scripts/ifcfg-enp0s8
#  register: check_DNS1
#  always_run: yes
#  ignore_errors: yes
#  changed_when: no

#- name: set DNS1
#  lineinfile: dest=/etc/sysconfig/network-scripts/ifcfg-enp0s8 insertafter=EOF line=DNS1=8.8.8.8
#  when: check_DNS1.rc != 0

#- name : systemctl restart network
#  command: systemctl restart network

- name: install modules
  yum: name={{ item }} state=present
  with_items:
    - git
    - vim
    - wget
    - tar

- name: create download folder
  file: path={{ download_folder }} state=directory mode=0755

- name: check java_home directory
  stat: path={{java_home}}
  register: java_home_check

- name: check java_archive file
  stat: path={{java_archive}}
  register: java_archive_check

- name: remove java_archive if it exists and it is empty
  file: state=absent path={{java_archive}}
  when: java_archive_check.stat.exists and java_home_check.stat.size == 0

- name: Download Java
  command: "wget -q -O {{java_archive}} --no-check-certificate --no-cookies --header 'Cookie: oraclelicense=accept-securebackup-cookie' {{download_url}} creates={{java_archive}}"
  when: java_home_check.stat.exists == False

- name: Unpack archive
  command: "tar -zxf {{java_archive}} -C {{download_folder}} creates={{java_home}}"

- name: Fix ownership
  file: state=directory path={{java_home}} owner=root group=root recurse=yes

- name: Make Java available for system
  command: update-alternatives --install /usr/bin/java java {{java_home}}/bin/java 17000

- name: run update-alternatives to set the installed java
  command: update-alternatives --set java {{java_home}}/bin/java

- name: Clean up
  file: state=absent path={{java_archive}}
